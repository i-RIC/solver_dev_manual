cg\_open\_f
~~~~~~~~~~~

-  Opens a CGNS file.

[Format]

    call **cg\_open\_f** (filename, mode, fid, ier)

[Arguments]

+-----------------------+---------------------+-----------+----------------------------------+
| **Type**              | **Variable name**   | **I/O**   | **Description**                  |
+=======================+=====================+===========+==================================+
| character(\*)         | filename            | I         | Filename                         |
+-----------------------+---------------------+-----------+----------------------------------+
| parameter (integer)   | mode                | I         | File Open mode                   |
|                       |                     |           |                                  |
|                       |                     |           | 　CG\_MODE\_MODIFY: read/write   |
|                       |                     |           |                                  |
|                       |                     |           | 　CG\_MODE\_READ: read only      |
|                       |                     |           |                                  |
|                       |                     |           | 　CG\_MODE\_WRITE: write only    |
|                       |                     |           |                                  |
|                       |                     |           | 　CG\_MODE\_CLOSE: close         |
+-----------------------+---------------------+-----------+----------------------------------+
| integer               | fid                 | O         | File ID                          |
+-----------------------+---------------------+-----------+----------------------------------+
| integer               | ier                 | O         | Error code. 0 means success.     |
+-----------------------+---------------------+-----------+----------------------------------+

cg\_iric\_init\_f
~~~~~~~~~~~~~~~~~

-  Initializes the internal variables that are used for reading and
       writing CGNS file.

[Format]

    call **cg\_iric\_init\_f** (fid, ier)

[Arguments]

+------------+---------------------+-----------+-------------------------------------------------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                                                                     |
+============+=====================+===========+=====================================================================================+
| integer    | fid                 | I         | File ID                                                                             |
+------------+---------------------+-----------+-------------------------------------------------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success. In case of grid generating program, 1 means success.   |
+------------+---------------------+-----------+-------------------------------------------------------------------------------------+

cg\_iric\_initread\_f
~~~~~~~~~~~~~~~~~~~~~

-  Initializes the internal variables that are used for reading CGNS
       file.

[Format]

    call **cg\_iric\_initread\_f** (fid, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | fid                 | I         | File ID                        |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

cg\_iric\_initoption\_f
~~~~~~~~~~~~~~~~~~~~~~~

-  Set up the options for the solver.

[Format]

    call **cg\_iric\_initoption\_f** (optionval, ier)

[Arguments]

+------------+---------------------+-----------+-------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                           |
+============+=====================+===========+===========================================+
| integer    | optionval           | I         | The value that corresponds to an option   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.              |
+------------+---------------------+-----------+-------------------------------------------+

The options that can be set up currently are as follows:

-  IRIC\_OPTION\_CANCEL: The solver detects cancel request by calling
       iric\_check\_cancel\_f.

cg\_iric\_read\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a integer-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_integer\_f** (label, intvalue, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | intvalue            | O         | Integer read from the CGSN file                              |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a double-precision real-type variable from the
       CGNS file.

[Format]

    call **cg\_iric\_read\_real\_f** (label, realvalue, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                                              |
+====================+=====================+===========+==============================================================+
| character(\*)      | label               | I         | Name of the variable defined in the solver definition file   |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision   | realvalue           | O         | Real number read from the CGSN file                          |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.                                 |
+--------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a single-precision real-type variable from the
       CGNS file.

[Format]

    call **cg\_iric\_read\_realsingle\_f** (label, realvalue, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| real            | realvalue           | O         | Real number read from the CGSN file                          |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a string-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_string\_f**\ (label, strvalue, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)   | strvalue            | O         | Character string read from the CGSN file                     |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the size of a functional-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_functionalsize\_f** (label, size, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | size                | O         | Length of the array that has been read from the CGSN file    |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type double-precision real variable
       from the CGNS file.

[Format]

    call **cg\_iric\_read\_functional\_f** (label, x, y, ier)

[Arguments]

+------------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**                                       | **Variable name**   | **I/O**   | **Description**                                              |
+================================================+=====================+===========+==============================================================+
| character(\*)                                  | label               | I         | Name of the variable defined in the solver definition file   |
+------------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision , dimension(:), allocatable   | x                   | O         | Array of x values                                            |
+------------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision, dimension(:), allocatable    | y                   | O         | Array of y values                                            |
+------------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                                        | ier                 | O         | Error code. 0 means success.                                 |
+------------------------------------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type single-precision real variable
       from the CGNS file.

[Format]

    call **cg\_iric\_read\_functional\_realsingle\_f** (label, x, y,
    ier)

[Arguments]

+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**                           | **Variable name**   | **I/O**   | **Description**                                              |
+====================================+=====================+===========+==============================================================+
| character(\*)                      | label               | I         | Name of the variable defined in the solver definition file   |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| real , dimension(:), allocatable   | x                   | O         | Array of x values                                            |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| real, dimension(:), allocatable    | y                   | O         | Array of y values                                            |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                            | ier                 | O         | Error code. 0 means success.                                 |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type real variable from the CGNS
       file. It is used for functional-type varianble with one parameter
       and multiple values.

[Format]

    call **cg\_iric\_read\_functionalwithname\_f** (label, name, data,
    ier)

[Arguments]

+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| **Type**                           | **Variable name**   | **I/O**   | **Description**                                                         |
+====================================+=====================+===========+=========================================================================+
| character(\*)                      | label               | I         | Name of the variable defined in the solver definition file              |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| character(\*)                      | name                | I         | Name of the variable value name defined in the solver definition file   |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| real , dimension(:), allocatable   | data                | O         | Array of values                                                         |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer                            | ier                 | O         | Error code. 0 means success.                                            |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+

cg\_iric\_gotogridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Makes preparations for reading a two-dimensional structured grid.

[Format]

    call **cg\_iric\_gotogridcoord2d\_f** (nx, ny, ier)

[Arguments]

+------------+---------------------+-----------+-------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                           |
+============+=====================+===========+===========================================+
| integer    | nx                  | O         | Number of grid nodes in the i direction   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | ny                  | O         | Number of grid nodes in the j direction   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.              |
+------------+---------------------+-----------+-------------------------------------------+

cg\_iric\_gotogridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Makes preparations for reading a 3D structured grid.

[Format]

    call **cg\_iric\_gotogridcoord3d\_f**\ (nx, ny, nz, ier)

[Arguments]

+------------+---------------------+-----------+-------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                           |
+============+=====================+===========+===========================================+
| integer    | nx                  | O         | Number of grid nodes in the i direction   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | ny                  | O         | Number of grid nodes in the j direction   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | nz                  | O         | Number of grid nodes in the k direction   |
+------------+---------------------+-----------+-------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.              |
+------------+---------------------+-----------+-------------------------------------------+

cg\_iric\_getgridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads a two-dimensional structured grid.

[Format]

    call **cg\_iric\_getgridcoord2d\_f** (x, y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                     |
+===============================================+=====================+===========+=====================================+
| double precision, dimension(:), allocatable   | x                   | O         | x coordinate value of a grid node   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| double precision, dimension(:), allocatable   | y                   | O         | y coordinate value of a grid node   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.        |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+

cg\_iric\_getgridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Subroutine to reads a three-dimensional structured grid

[Format]

    call **cg\_iric\_getgridcoord3d\_f** (x, y, z, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                     |
+===============================================+=====================+===========+=====================================+
| double precision, dimension(:), allocatable   | x                   | O         | x coordinate value of a grid node   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| double precision, dimension(:), allocatable   | y                   | O         | y coordinate value of a grid node   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| double precision, dimension(:), allocatable   | z                   | O         | z coordinate value of a grid node   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.        |
+-----------------------------------------------+---------------------+-----------+-------------------------------------+

cg\_iric\_read\_grid\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the integer attribute values defined for nodes of a structured
       grid.

[Format]

    call **cg\_iric\_read\_grid\_integer\_node\_f** (label, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the double-precision real-type attribute values defined for
       nodes of a structured grid.

[Format]

    call **cg\_iric\_read\_grid\_real\_node\_f** (label, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | label               | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute value                |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the integer attribute values defined for cells of a structured
       grid.

[Format]

    call **cg\_iric\_read\_grid\_integer\_cell\_f** (label, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the double-precision real-type attribute values defined for
       cells of a structured grid.

[Format]

    call **cg\_iric\_read\_grid\_real\_cell\_f** (label, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | label               | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute value                |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_complex\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of groups of complex type grid attribute

[Format]

    call **cg\_iric\_read\_complex\_count\_f** (type, num, ier)

[Arguments]

+-----------------+---------------------+-----------+---------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                   |
+=================+=====================+===========+===================================================+
| character(\*)   | type                | I         | Attribute name                                    |
+-----------------+---------------------+-----------+---------------------------------------------------+
| integer         | num                 | O         | The number of complex type grid attribute group   |
+-----------------+---------------------+-----------+---------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                      |
+-----------------+---------------------+-----------+---------------------------------------------------+

cg\_iric\_read\_complex\_integer\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the integer attribute values of complex type grid attribute

[Format]

    call **cg\_iric\_read\_complex\_integer\_f** (type, num, name,
    value, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | type                | I         | Attribute name                 |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | num                 | I         | Group number                   |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | name                | I         | Condition name                 |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | value               | O         | Attribute value                |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_complex\_real\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the double precision attribute values of complex type grid
       attribute

[Format]

    call **cg\_iric\_read\_complex\_real\_f** (type, num, name, value,
    ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| character(\*)      | type                | I         | Attribute name                 |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | num                 | I         | Group number                   |
+--------------------+---------------------+-----------+--------------------------------+
| character(\*)      | name                | I         | Condition name                 |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | value               | O         | Attribute value                |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_complex\_realsingle\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the single precision attribute values of complex type grid
       attribute

[Format]

    call **cg\_iric\_read\_complex\_realsingle\_f** (type, num, name,
    value, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | type                | I         | Attribute name                 |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | num                 | I         | Group number                   |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | name                | I         | Condition name                 |
+-----------------+---------------------+-----------+--------------------------------+
| Real            | value               | O         | Attribute value                |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_complex\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the string attribute values of complex type grid attribute

[Format]

    call **cg\_iric\_read\_complex\_string\_f** (type, num, name, value,
    ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | type                | I         | Attribute name                 |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | num                 | I         | Group number                   |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | name                | I         | Condition name                 |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | value               | O         | Attribute value                |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

For variable “name”, specify the value of “name” attribute value of Item
element in the solver definition file. When you want to read “Name”
value on the dialog, specify “\_caption” as variable “name”.

cg\_iric\_read\_complex\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Checks the size of a functional-type attribute of complex type grid
       attribute

[Format]

    call **cg\_iric\_read\_complex\_functionalsize\_f** (type, num,
    name, size, ier)

[Arguments]

+-----------------+---------------------+-----------+---------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                       |
+=================+=====================+===========+=======================================+
| character(\*)   | type                | I         | Attribute name                        |
+-----------------+---------------------+-----------+---------------------------------------+
| integer         | num                 | I         | Group number                          |
+-----------------+---------------------+-----------+---------------------------------------+
| character(\*)   | name                | I         | Condition name                        |
+-----------------+---------------------+-----------+---------------------------------------+
| integer         | size                | O         | The length of condition value array   |
+-----------------+---------------------+-----------+---------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.          |
+-----------------+---------------------+-----------+---------------------------------------+

cg\_iric\_read\_complex\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads functional attribute data of complex type grid attribute

[Format]

    call **cg\_iric\_read\_complex\_functional\_f** (type, num, name, x,
    y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | type                | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | num                 | I         | Group number                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                                 | name                | I         | Condition name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | x                   | O         | x value array                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   |           | y value array                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

 cg\_iric\_read\_complex\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads functional attribute of complex type grid attribute (with
       multiple values)

[Format]

    call **cg\_iric\_read\_complex\_functionalwithname\_f** (type, num,
    name, paramname, data, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | type                | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | num                 | I         | Group number                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                                 | name                | I         | Condition name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                                 | paramname           | I         | Value name                     |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | data                | O         | Value array                    |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_complex\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads functional attribute data of complex type grid attribute

[Format]

    call **cg\_iric\_read\_complex\_functional\_realsingle\_f** (type,
    num, name, x, y, ier)

[Arguments]

+-----------------------------------+---------------------+-----------+--------------------------------+
| **Type**                          | **Variable name**   | **I/O**   | **Description**                |
+===================================+=====================+===========+================================+
| character(\*)                     | type                | I         | Attribute name                 |
+-----------------------------------+---------------------+-----------+--------------------------------+
| integer                           | num                 | I         | Group number                   |
+-----------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                     | name                | I         | Condition name                 |
+-----------------------------------+---------------------+-----------+--------------------------------+
| real, dimension(:), allocatable   | x                   | O         | x value array                  |
+-----------------------------------+---------------------+-----------+--------------------------------+
| real, dimension(:), allocatable   | y                   | O         | y value array                  |
+-----------------------------------+---------------------+-----------+--------------------------------+
| integer                           | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_complex\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the complex attribute values defined for grid nodes

[Format]

    call **cg\_iric\_read\_grid\_complex\_node\_f** (label, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_complex\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the complex attribute values defined for grid cells

[Format]

    call **cg\_iric\_read\_grid\_complex\_cell\_f** (label, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_functionaltimesize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of values of dimension “Time” for functional grid
   attribute

[Format]

    call **cg\_iric\_read\_grid\_functionaltimesize\_f** (label, count,
    ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                            |
+=================+=====================+===========+============================================+
| character(\*)   | label               | I         | Attribute name                             |
+-----------------+---------------------+-----------+--------------------------------------------+
| integer         | count               | O         | The number of values of dimension “Time”   |
+-----------------+---------------------+-----------+--------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.               |
+-----------------+---------------------+-----------+--------------------------------------------+

cg\_iric\_read\_grid\_functionaltime\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of dimension “Time” for functional grid attribute

[Format]

    call **cg\_iric\_read\_grid\_functionaltime\_f** (label, values,
    ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+----------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                  |
+===============================================+=====================+===========+==================================+
| character(\*)                                 | label               | I         | Attribute name                   |
+-----------------------------------------------+---------------------+-----------+----------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | The values of dimension “Time”   |
+-----------------------------------------------+---------------------+-----------+----------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.     |
+-----------------------------------------------+---------------------+-----------+----------------------------------+

cg\_iric\_read\_grid\_functionaldimensionsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of values of dimension for functional grid attribute

[Format]

    call **cg\_iric\_read\_grid\_functionaldimensionsize\_f** (label,
    dimname, count, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                            |
+=================+=====================+===========+============================================+
| character(\*)   | label               | I         | Attribute name                             |
+-----------------+---------------------+-----------+--------------------------------------------+
| character(\*)   | dimname             | I         | Dimension name                             |
+-----------------+---------------------+-----------+--------------------------------------------+
| integer         | count               | O         | The number of values of dimension “Time”   |
+-----------------+---------------------+-----------+--------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.               |
+-----------------+---------------------+-----------+--------------------------------------------+

cg\_iric\_read\_grid\_functionaldimension\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of integer dimension for functional grid attribute

[Format]

    call **cg\_iric\_read\_grid\_functionaldimension\_integer\_f**
    (label, dimname, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                        | dimname             | I         | Dimension name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | The values of dimension        |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_functionaldimension\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of double-precision dimension for functional grid
   attribute

[Format]

    call **cg\_iric\_read\_grid\_functionaldimension\_real\_f** (label,
    dimname, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | label               | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| character(\*)                                 | dimname             | I         | Dimension name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | The values of dimension        |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_grid\_functional\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of functional integer grid attribute with dimension
   “Time” definied at grid nodes.

[Format]

    call **cg\_iric\_read\_grid\_functional\_integer\_node\_f** (label,
    dimid, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+------------------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                          |
+======================================+=====================+===========+==========================================+
| character(\*)                        | label               | I         | Attribute name                           |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer                              | dimid               | I         | ID of “Time” (1 to the number of Time)   |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                          |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.             |
+--------------------------------------+---------------------+-----------+------------------------------------------+

cg\_iric\_read\_grid\_functional\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of functional double-precision grid attribute with
   dimension “Time” definied at grid nodes.

[Format]

    call **cg\_iric\_read\_grid\_functional\_real\_node\_f** (label,
    dimid, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                          |
+===============================================+=====================+===========+==========================================+
| character(\*)                                 | label               | I         | Attribute name                           |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                       | dimid               | I         | ID of “Time” (1 to the number of Time)   |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute value                          |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.             |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+

cg\_iric\_read\_grid\_functional\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of functional integer grid attribute with dimension
   “Time” definied at grid cells.

[Format]

    call **cg\_iric\_read\_grid\_functional\_integer\_cell\_f** (label,
    dimid, values, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+------------------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                          |
+======================================+=====================+===========+==========================================+
| character(\*)                        | label               | I         | Attribute name                           |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer                              | dimid               | I         | ID of “Time” (1 to the number of Time)   |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute value                          |
+--------------------------------------+---------------------+-----------+------------------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.             |
+--------------------------------------+---------------------+-----------+------------------------------------------+

cg\_iric\_read\_grid\_functional\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the values of functional double-precision grid attribute with
   dimension “Time” definied at grid cells.

[Format]

    call **cg\_iric\_read\_grid\_functional\_real\_cell\_f** (label,
    dimid, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                          |
+===============================================+=====================+===========+==========================================+
| character(\*)                                 | label               | I         | Attribute name                           |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                       | dimid               | I         | ID of “Time” (1 to the number of Time)   |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute value                          |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.             |
+-----------------------------------------------+---------------------+-----------+------------------------------------------+

cg\_iric\_bc\_count\_f
~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of boundary condition.

[Format]

    call **cg\_iric\_bc\_count\_f** (type, num)

[Arguments]

+-----------------+---------------------+-----------+-------------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                                   |
+=================+=====================+===========+===================================================================+
| character(\*)   | type                | I         | The type name of boundary condition you want to know the count.   |
+-----------------+---------------------+-----------+-------------------------------------------------------------------+
| integer         | num                 | O         | The number of boundary condition                                  |
+-----------------+---------------------+-----------+-------------------------------------------------------------------+

cg\_iric\_read\_bc\_indicessize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of elements (nodes or cells) where the boundary
       condition is set.

[Format]

    call **cg\_iric\_bc\_indicessize\_f** (type, num, size, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                                                |
+=================+=====================+===========+================================================================================+
| character(\*)   | type                | I         | The type name of boundary condition you want to know the indices size          |
+-----------------+---------------------+-----------+--------------------------------------------------------------------------------+
| integer         | num                 | O         | The boundary condition ID number                                               |
+-----------------+---------------------+-----------+--------------------------------------------------------------------------------+
| integer         | size                | O         | The number of elements (nodes or cells) where the boundary condition is set.   |
+-----------------+---------------------+-----------+--------------------------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                                   |
+-----------------+---------------------+-----------+--------------------------------------------------------------------------------+

The value returned to size differs depending on the position where the
boundary condition is defined, as shown in Table 6‑16.

Table ‑ The relasionship between the boundary condition position and the
value returned to size

+---------+-----------------------------------+------------------------------+
| **#**   | **Boundary condition position**   | **Value returned to size**   |
+=========+===================================+==============================+
| 1       | Node                              | The number of nodes          |
+---------+-----------------------------------+------------------------------+
| 2       | Cell                              | The number of cells          |
+---------+-----------------------------------+------------------------------+
| 3       | Edge                              | The number of edges x 2      |
+---------+-----------------------------------+------------------------------+

cg\_iric\_read\_bc\_indices\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the elements (nodes or cells) where the boundary condition is
       set.

[Format]

    call **cg\_iric\_bc\_indices\_f** (type, num, indices, ier)

[Arguments]

+----------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| **Type**                               | **Variable name**   | **I/O**   | **Description**                                                         |
+========================================+=====================+===========+=========================================================================+
| character(\*)                          | type                | I         | The type name of boundary condition you want to know the indices size   |
+----------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer                                | num                 | O         | The boundary condition ID number                                        |
+----------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer, dimension(2,:), allocatable   | indices             |           | The list of element ids where boundary condition is specified           |
+----------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer                                | ier                 | O         | Error code. 0 means success.                                            |
+----------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+

The values returned to indices differ depending on the position where
the boundary condition is defined, as shown in Table 6‑17. Please note
that for nodes and cells, each element is defined with two values, and
for edges, each element is defined with four values.

Table ‑ The relasionship between the boundary condition position and the
value returned to indices

+---------+-----------------------------------+----------------------------------------------------+
| **#**   | **Boundary condition position**   | **Value returned to indices**                      |
+=========+===================================+====================================================+
| 1       | Node                              | (I of Node1), (J of Node1)                         |
|         |                                   |                                                    |
|         |                                   | …                                                  |
|         |                                   |                                                    |
|         |                                   | (I of NodeN), (J of NodeN)                         |
+---------+-----------------------------------+----------------------------------------------------+
| 2       | Cell                              | (I of Cell1), (J of Cell1)                         |
|         |                                   |                                                    |
|         |                                   | …                                                  |
|         |                                   |                                                    |
|         |                                   | (I of CellN), (J of CellN)                         |
+---------+-----------------------------------+----------------------------------------------------+
| 3       | Edge                              | (I of Edge1 start node), (J of Edge1 start node)   |
|         |                                   |                                                    |
|         |                                   | (I of Edge1 end node), (J of Edge1 end node)       |
|         |                                   |                                                    |
|         |                                   | …                                                  |
|         |                                   |                                                    |
|         |                                   | (I of EdgeN start node), (J of EdgeN start node)   |
|         |                                   |                                                    |
|         |                                   | (I of EdgeN end node), (J of EdgeN end node)       |
+---------+-----------------------------------+----------------------------------------------------+

cg\_iric\_read\_bc\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a string-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_integer\_f** (type, num, label, intvalue,
    ier)

[Arguments]

+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                                                 |
+=================+=====================+===========+=================================================================================+
| character(\*)   | type                | I         | Name of boundary condition                                                      |
+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+
| integer         | num                 | I         | Boundary condition number                                                       |
+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+
| character(\*)   | label               | I         | Name of the boundary condition variable defined in the solver definition file   |
+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+
| integer         | intvalue            | O         | Integer read from the CGSN file                                                 |
+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                                    |
+-----------------+---------------------+-----------+---------------------------------------------------------------------------------+

cg\_iric\_read\_bc\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a double-precision real-type variable from the
       CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_real\_f** (type, num, label, realvalue,
    ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                                              |
+====================+=====================+===========+==============================================================+
| character(\*)      | type                | I         | Name of boundary condition                                   |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| integer            | num                 | I         | Boundary condition number                                    |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)      | label               | I         | Name of the variable defined in the solver definition file   |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision   | realvalue           | O         | Real number read from the CGSN file                          |
+--------------------+---------------------+-----------+--------------------------------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.                                 |
+--------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_bc\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a single-precision real-type variable from the
       CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_realsingle\_f** (type, num, label,
    realvalue, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | type                | I         | Name of boundary condition                                   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | num                 | I         | Boundary condition number                                    |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| real            | realvalue           | O         | Real number read from the CGSN file                          |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_bc\_string\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a string-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_string\_f**\ (type, num, label, strvalue,
    ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | type                | I         | Name of boundary condition                                   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | num                 | I         | Boundary condition number                                    |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)   | strvalue            | O         | Character string read from the CGSN file                     |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

When you want to load the value users specified as “Name” on iRIC GUI,
call this function with value “\_caption” for label.

cg\_iric\_read\_bc\_functionalsize\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the size of a functional-type variable from the CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_functionalsize\_f** (type, num, label,
    size, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                                              |
+=================+=====================+===========+==============================================================+
| character(\*)   | type                | I         | Name of boundary condition                                   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | num                 | I         | Boundary condition number                                    |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)   | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | size                | O         | Length of the array that has been read from the CGSN file    |
+-----------------+---------------------+-----------+--------------------------------------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.                                 |
+-----------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_bc\_functional\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type double-precision real variable
       from the CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_functional\_f** (type, num, label, x, y,
    ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                                              |
+===============================================+=====================+===========+==============================================================+
| character(\*)                                 | type                | I         | Name of boundary condition                                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                                       | num                 | I         | Boundary condition number                                    |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)                                 | label               | I         | Name of the variable defined in the solver definition file   |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision, dimension(:), allocatable   | x                   | O         | Array of x values                                            |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| double precision, dimension(:), allocatable   | y                   | O         | Array of y values                                            |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.                                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_bc\_functional\_realsingle\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type single-precision real variable
       from the CGNS file.

[Format]

    call **cg\_iric\_read\_bc\_functional\_realsingle\_f** (type, num,
    label, x, y, ier)

[Arguments]

+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| **Type**                           | **Variable name**   | **I/O**   | **Description**                                              |
+====================================+=====================+===========+==============================================================+
| character(\*)                      | type                | I         | Name of boundary condition                                   |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                            | num                 | I         | Boundary condition number                                    |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| character(\*)                      | label               | I         | Name of the variable defined in the solver definition file   |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| real , dimension(:), allocatable   | x                   | O         | Array of x values                                            |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| real, dimension(:), allocatable    | y                   | O         | Array of y values                                            |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+
| integer                            | ier                 | O         | Error code. 0 means success.                                 |
+------------------------------------+---------------------+-----------+--------------------------------------------------------------+

cg\_iric\_read\_bc\_functionalwithname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of a functional-type real variable from the CGNS
       file. It is used for functional-type varianble with one parameter
       and multiple values.

[Format]

    call **cg\_iric\_read\_bc\_functionalwithname\_f** (type, num,
    label, name, data, ier)

[Arguments]

+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| **Type**                           | **Variable name**   | **I/O**   | **Description**                                                         |
+====================================+=====================+===========+=========================================================================+
| character(\*)                      | type                | I         | Name of boundary condition                                              |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer                            | num                 | I         | Boundary condition number                                               |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| character(\*)                      | label               | I         | Name of the variable defined in the solver definition file              |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| character(\*)                      | name                | I         | Name of the variable value name defined in the solver definition file   |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| real , dimension(:), allocatable   | data                | O         | Array of values                                                         |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer                            | ier                 | O         | Error code. 0 means success.                                            |
+------------------------------------+---------------------+-----------+-------------------------------------------------------------------------+

cg\_iric\_read\_geo\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of geographic data

[Format]

    call **cg\_iric\_read\_geo\_count\_f** (name, geocount, ier)

[Arguments]

+-----------------+---------------------+-----------+---------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                 |
+=================+=====================+===========+=================================+
| character(\*)   | name                | I         | Geographic data group name      |
+-----------------+---------------------+-----------+---------------------------------+
| integer         | geocount            | O         | The number of geographic data   |
+-----------------+---------------------+-----------+---------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.    |
+-----------------+---------------------+-----------+---------------------------------+

cg\_iric\_read\_geo\_filename\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the file name and data type of geographic data

[Format]

    call **cg\_iric\_read\_geo\_filename\_f**\ (name, geoid,
    geofilename, geotype, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | name                | I         | Geographic data group name     |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | geoid               | I         | Geographic data number         |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | geofilename         | O         | Filename                       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | geotype             | O         | Geographic data type           |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

The retuened value of geo type is one of the values shown in Table 6‑18.

Table ‑ Constant values defined in iriclib\_f.h as geographic data type

+---------+--------------------------+-------------+---------------------+
| **#**   | **Name**                 | **Value**   | **Remarks**         |
+=========+==========================+=============+=====================+
| 1       | IRIC\_GEO\_POLYGON       | 1           | Polygon             |
+---------+--------------------------+-------------+---------------------+
| 2       | IRIC\_GEO\_RIVERSURVEY   | 2           | River survey data   |
+---------+--------------------------+-------------+---------------------+

iric\_geo\_polygon\_open\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Opens the geographic data file that contains polygon data

[Format]

    call **iric\_geo\_polygon\_open\_f**\ (filename, pid, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | filename            | I         | File name                      |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | pid                 | O         | Polygon ID for opened file     |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

iric\_geo\_polygon\_read\_integervalue\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of polygon data as integer

[Format]

    call **iric\_geo\_polygon\_read\_integervalue\_f**\ (pid, intval,
    ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | Pid                 | I         | Polygon ID                     |
+------------+---------------------+-----------+--------------------------------+
| integer    | intval              | O         | The value of the polygon       |
+------------+---------------------+-----------+--------------------------------+
| integer    | Ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

iric\_geo\_polygon\_read\_realvalue\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the value of polygon datas double precision real

[Format]

    call **iric\_geo\_polygon\_read\_realvalue\_f**\ (pid, realval, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | Pid                 | I         | Polygon ID                     |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | realval             | O         | The value of the polygon       |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | Ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

iric\_geo\_polygon\_read\_pointcount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of polygon vertices

[Format]

    call **iric\_geo\_polygon\_read\_pointcount\_f**\ (pid, count, ier)

[Arguments]

+------------+---------------------+-----------+-----------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                         |
+============+=====================+===========+=========================================+
| integer    | pid                 | I         | Polygon ID                              |
+------------+---------------------+-----------+-----------------------------------------+
| integer    | count               | O         | The number of vertices of the polygon   |
+------------+---------------------+-----------+-----------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.            |
+------------+---------------------+-----------+-----------------------------------------+

iric\_geo\_polygon\_read\_points\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the coorinates of polygon vertices

[Format]

    call **iric\_geo\_polygon\_read\_points\_f**\ (pid, x, y, ier)

[Arguments]

+------------------------------------------------+---------------------+-----------+-------------------------------------+
| **Type**                                       | **Variable name**   | **I/O**   | **Description**                     |
+================================================+=====================+===========+=====================================+
| integer                                        | pid                 | I         | Polygon ID                          |
+------------------------------------------------+---------------------+-----------+-------------------------------------+
| double precision , dimension(:), allocatable   | x                   | O         | X coordinates of polygon vertices   |
+------------------------------------------------+---------------------+-----------+-------------------------------------+
| double precision , dimension(:), allocatable   | y                   | O         | Y coordinates of polygon vertices   |
+------------------------------------------------+---------------------+-----------+-------------------------------------+
| integer                                        | ier                 | O         | Error code. 0 means success.        |
+------------------------------------------------+---------------------+-----------+-------------------------------------+

iric\_geo\_polygon\_read\_holecount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of holes in the polygon

[Format]

    call **iric\_geo\_polygon\_read\_holecount\_f**\ (pid, holecount,
    ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | pid                 | I         | Polygon ID                     |
+------------+---------------------+-----------+--------------------------------+
| integer    | holecount           | O         | The number of holes            |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

iric\_geo\_polygon\_read\_holepointcount\_f 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of vertices of hole polygon

[Format]

    call **iric\_geo\_polygon\_read\_holepointcount\_f**\ (pid, holeid,
    count, ier)

[Arguments]

+------------+---------------------+-----------+----------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                              |
+============+=====================+===========+==============================================+
| integer    | pid                 | I         | Polygon ID                                   |
+------------+---------------------+-----------+----------------------------------------------+
| integer    | holeid              | I         | Hole ID                                      |
+------------+---------------------+-----------+----------------------------------------------+
| integer    | count               | O         | The number of vertices of the hole polygon   |
+------------+---------------------+-----------+----------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.                 |
+------------+---------------------+-----------+----------------------------------------------+

iric\_geo\_polygon\_read\_holepoints\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the coordinates of hole polygon vertices

[Format]

    call **iric\_geo\_polygon\_read\_holepoints\_f**\ (pid, holeid, x,
    y, ier)

[Arguments]

+------------------------------------------------+---------------------+-----------+------------------------------------------+
| **Type**                                       | **Variable name**   | **I/O**   | **Description**                          |
+================================================+=====================+===========+==========================================+
| integer                                        | pid                 | I         | Polygon ID                               |
+------------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                        | holeid              | I         | Hole ID                                  |
+------------------------------------------------+---------------------+-----------+------------------------------------------+
| double precision , dimension(:), allocatable   | x                   | O         | X coordinates of hole polygon vertices   |
+------------------------------------------------+---------------------+-----------+------------------------------------------+
| double precision , dimension(:), allocatable   | y                   | O         | Y coordinates of hole polygon vertices   |
+------------------------------------------------+---------------------+-----------+------------------------------------------+
| integer                                        | ier                 | O         | Error code. 0 means success.             |
+------------------------------------------------+---------------------+-----------+------------------------------------------+

iric\_geo\_polygon\_close\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Closes the geographic data file

[Format]

    call **iric\_geo\_polygon\_close\_f**\ (pid, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | pid                 | I         | Polygon ID                     |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_open\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Opens the geographic data file that contains river survey data

[Format]

    call **iric\_geo\_riversurvey\_open\_f**\ (filename, rid, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | filename            | I         | Filename                       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | rid                 | O         | River Survey Data ID           |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of the crosssections in river survey data

[Format]

    call **iric\_geo\_riversurvey\_read\_count\_f**\ (rid, count, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | rid                 | I         | River Survey Data ID           |
+------------+---------------------+-----------+--------------------------------+
| integer    | count               | O         | The number of crosssections    |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_position\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the coordinates of the crosssection center point

[Format]

    call **iric\_geo\_riversurvey\_read\_position\_f**\ (rid, pointid,
    x, y, ier)

[Arguments]

+--------------------+---------------------+-----------+------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                    |
+====================+=====================+===========+====================================+
| integer            | rid                 | I         | River Survey Data ID               |
+--------------------+---------------------+-----------+------------------------------------+
| integer            | pointid             | I         | Crosssection ID                    |
+--------------------+---------------------+-----------+------------------------------------+
| double precision   | x                   | O         | X coordinate of the center point   |
+--------------------+---------------------+-----------+------------------------------------+
| double precision   | y                   | O         | Y coordinate of the center point   |
+--------------------+---------------------+-----------+------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.       |
+--------------------+---------------------+-----------+------------------------------------+

iric\_geo\_riversurvey\_read\_direction\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the direction of the crosssection as normalized vector

[Format]

    call **iric\_geo\_riversurvey\_read\_direction\_f**\ (rid, pointid,
    vx, vy, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                                  |
+====================+=====================+===========+==================================================+
| integer            | rid                 | I         | River Survey Data ID                             |
+--------------------+---------------------+-----------+--------------------------------------------------+
| integer            | pointid             | I         | Crosssection ID                                  |
+--------------------+---------------------+-----------+--------------------------------------------------+
| double precision   | vx                  | O         | X component of the normalized direction vector   |
+--------------------+---------------------+-----------+--------------------------------------------------+
| double precision   | vx                  | O         | Y component of the normalized direction vector   |
+--------------------+---------------------+-----------+--------------------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.                     |
+--------------------+---------------------+-----------+--------------------------------------------------+

iric\_geo\_riversurvey\_read\_name\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the name of the crosssection as string

[Format]

    call **iric\_geo\_riversurvey\_read\_name\_f**\ (rid, pointed, name,
    ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| integer         | rid                 | I         | River Survey Data ID           |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | pointid             | I         | Crosssection ID                |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | name                | O         | Name of the crosssection       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_realname\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the name of the crosssection as real number

[Format]

    call **iric\_geo\_riversurvey\_read\_realname\_f**\ (rid, pointid,
    realname, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | rid                 | I         | River Survey Data ID           |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | pointid             | I         | Crosssection ID                |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | realname            | O         | Name of the crosssection       |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_leftshift\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the shift offset value of the crosssection

[Format]

    call **iric\_geo\_riversurvey\_read\_leftshift\_f**\ (rid, pointid,
    shift, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | rid                 | I         | River Survey Data ID           |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | pointid             | I         | Crosssection ID                |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | shift               | O         | The amount of left shift       |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_altitudecount\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of altitude data of the crosssection

[Format]

    call **iric\_geo\_riversurvey\_read\_altitudecount\_f**\ (rid,
    pointid, count, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | rid                 | I         | River Survey Data ID           |
+------------+---------------------+-----------+--------------------------------+
| integer    | pointid             | I         | Crosssection ID                |
+------------+---------------------+-----------+--------------------------------+
| integer    | count               | O         | The number of altitude data    |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_read\_altitudes\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the altitude data of the crosssection

[Format]

    call **iric\_geo\_riversurvey\_read\_altitudes\_f**\ (rid, pointid,
    position, height, active, ier)

[Arguments]

+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| **Type**                                       | **Variable name**   | **I/O**   | **Description**                                                                   |
+================================================+=====================+===========+===================================================================================+
| integer                                        | rid                 | I         | River Survey Data ID                                                              |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| pointid                                        | pointid             | I         | Crosssection ID                                                                   |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| double precision , dimension(:), allocatable   | position            | O         | Altitude position (less than 0: left bank side, grater than 0: right bank side)   |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| double precision , dimension(:), allocatable   | height              | O         | Altitude height (elevation)                                                       |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| integer, dimension(:), allocatable             | active              | O         | Altitude data active/inactive (1: active, 0: inactive)                            |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+
| integer                                        | ier                 | O         | Error code. 0 means success.                                                      |
+------------------------------------------------+---------------------+-----------+-----------------------------------------------------------------------------------+

iric\_geo\_riversurvey\_read\_fixedpointl\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the data of left bank extension line of the crosssection

[Format]

    call **iric\_geo\_riversurvey\_read\_fixedpointl\_f**\ (rid,
    pointid, set, directionx, directiony, index, ier)

[Arguments]

+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                                                         |
+====================+=====================+===========+=========================================================================+
| integer            | rid                 | I         | River Survey Data ID                                                    |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer            | pointid             | I         | Crosssection ID                                                         |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer            | set                 | O         | If defined, the value is 1                                              |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| double precision   | directionx          | O         | X component of normalized direction vector                              |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| double precision   | direction           | O         | Y component of normalized direction vector                              |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer            | index               | O         | The ID of the altitude data where the left bank extension line starts   |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.                                            |
+--------------------+---------------------+-----------+-------------------------------------------------------------------------+

iric\_geo\_riversurvey\_read\_fixedpointr\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the data of right bank extension line of the crosssection

[Format]

    call **iric\_geo\_riversurvey\_read\_fixedpointr\_f**\ (rid,
    pointid, set, directionx, directiony, index, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                                                          |
+====================+=====================+===========+==========================================================================+
| integer            | rid                 | I         | River Survey Data ID                                                     |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| integer            | pointid             | I         | Crosssection ID                                                          |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| integer            | set                 | O         | If defined, the value is 1                                               |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| double precision   | directionx          | O         | X component of normalized direction vector                               |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| double precision   | direction           | O         | Y component of normalized direction vector                               |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| integer            | index               | O         | The ID of the altitude data where the right bank extension line starts   |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.                                             |
+--------------------+---------------------+-----------+--------------------------------------------------------------------------+

iric\_geo\_riversurvey\_read\_watersurfaceelevation\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the water elevation at the crosssection

[Format]

    call
    **iric\_geo\_riversurvey\_read\_watersurfaceelevation\_f**\ (rid,
    pointid, set, value, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | rid                 | I         | River Survey Data ID           |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | pointid             | I         | Crosssection ID                |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | set                 | O         | If defined the value is 1      |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | value               | O         | Water surface elevation        |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

iric\_geo\_riversurvey\_close\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Closes the geographic data file

[Format]

    call **iric\_geo\_** **riversurvey\_close\_f**\ (pid, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | rid                 | I         | River Survey Data ID           |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

 cg\_iric\_writegridcoord1d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs a one-dimensional structured grid.

[Format]

    call **cg\_iric\_writegridcoord1d\_f** (nx, x, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                           |
+===============================================+=====================+===========+===========================================+
| integer                                       | nx                  | I         | Number of grid nodes in the i direction   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate value of a grid node         |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.              |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+

cg\_iric\_writegridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs a two-dimensional structured grid.

[Format]

    call **cg\_iric\_writegridcoord2d\_f** (nx, ny, x, y, ier)

[Arguments]

+-------------------------------------------------+---------------------+-----------+-------------------------------------------+
| **Type**                                        | **Variable name**   | **I/O**   | **Description**                           |
+=================================================+=====================+===========+===========================================+
| integer                                         | nx                  | I         | Number of grid nodes in the i direction   |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                         | ny                  | I         | Number of grid nodes in the j direction   |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:,:), allocatable   | x                   | I         | x coordinate value of a grid node         |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:,:), allocatable   | y                   | I         | y coordinate value of a grid node         |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                         | ier                 | O         | Error code. 0 means success.              |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------+

cg\_iric\_writegridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs a three-dimensional structured grid.

[Format]

    call **cg\_iric\_writegridcoord2d\_f** (nx, ny, x, y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                           |
+===============================================+=====================+===========+===========================================+
| integer                                       | nx                  | I         | Number of grid nodes in the i direction   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                       | ny                  | I         | Number of grid nodes in the j direction   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                       | nz                  | I         | Number of grid nodes in the k direction   |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate value of a grid node         |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:), allocatable   | y                   | I         | y coordinate value of a grid node         |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| double precision, dimension(:), allocatable   | z                   | I         | z coordinate value of a grid node         |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.              |
+-----------------------------------------------+---------------------+-----------+-------------------------------------------+

cg\_iric\_write\_grid\_integer\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs grid attribute values defined at grid nodes with integer
       value.

[Format]

    call **cg\_iric\_write\_grid\_integer\_node\_f** (label, values,
    ier)

[Arguments]

+-------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                            | **Variable name**   | **I/O**   | **Description**                |
+=====================================+=====================+===========+================================+
| character(\*)                       | label               | I         | Attribute name                 |
+-------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), llocatable   | values              | O         | Attribute values               |
+-------------------------------------+---------------------+-----------+--------------------------------+
| integer                             | ier                 | O         | Error code. 0 means success.   |
+-------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_grid\_real\_node\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs grid attribute values defined at grid nodes with real number
       value.

[Format]

    call **cg\_iric\_write\_grid\_real\_node\_f** (label, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | label               | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute values               |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_grid\_integer\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs grid attribute values defined at grid cells with integer
       value.

[Format]

    call **cg\_iric\_write\_grid\_integer\_cell\_f** (label, values,
    ier)

[Arguments]

+--------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                |
+======================================+=====================+===========+================================+
| character(\*)                        | label               | I         | Attribute name                 |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer, dimension(:), allocatable   | values              | O         | Attribute values               |
+--------------------------------------+---------------------+-----------+--------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.   |
+--------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_grid\_real\_cell\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs grid attribute values defined at grid cells with real number
       value.

[Format]

    call **cg\_iric\_read\_grid\_real\_cell\_f** (label, values, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| character(\*)                                 | label               | I         | Attribute name                 |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | values              | O         | Attribute values               |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_time\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs time.

[Format]

    call **cg\_iric\_write\_sol\_time\_f** (time, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| double precision   | time                | I         | Time                           |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_iteration\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs iteration count.

[Format]

    call **cg\_iric\_write\_sol\_iteration\_f** (iteration, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | iteration           | I         | Iteration count                |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_gridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs a two-dimensional structured grid.

[Format]

    call **cg\_iric\_write\_sol\_gridcoord2d\_f** (x, y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | I         | y coordinate                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_gridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs a three-dimensional structured grid.

[Format]

    call **cg\_iric\_write\_sol\_gridcoord3d\_f** (x, y, z, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | I         | y coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | z                   | I         | z coordinate                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_baseiterative\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs integer-type calculation results.

[Format]

    call **cg\_iric\_write\_sol\_baseiterative\_integer\_f** (label,
    val, ier)

[Arguments]

+---------------+---------------------+-----------+----------------------------------+
| **Type**      | **Variable name**   | **I/O**   | **Description**                  |
+===============+=====================+===========+==================================+
| character\*   | label               | I         | Name of the value to be output   |
+---------------+---------------------+-----------+----------------------------------+
| integer       | val                 | I         | Value to be output               |
+---------------+---------------------+-----------+----------------------------------+
| integer       | ier                 | O         | Error code. 0 means success.     |
+---------------+---------------------+-----------+----------------------------------+

cg\_iric\_write\_sol\_baseiterative\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs double-precision real-type calculation results.

[Format]

    call **cg\_iric\_write\_sol\_baseiterative\_real\_f** (label, val,
    ier)

[Arguments]

+--------------------+---------------------+-----------+----------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                  |
+====================+=====================+===========+==================================+
| character\*        | label               | I         | Name of the value to be output   |
+--------------------+---------------------+-----------+----------------------------------+
| double precision   | val                 | I         | Value to be output               |
+--------------------+---------------------+-----------+----------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.     |
+--------------------+---------------------+-----------+----------------------------------+

cg\_iric\_write\_sol\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs integer-type calculation results, giving a value for each
       grid node.

[Format]

    call **cg\_iric\_write\_sol\_integer\_f** (label, val, ier)

[Arguments]

+----------------------------------------+---------------------+-----------+----------------------------------------------------------------------------------------+
| **Type**                               | **Variable name**   | **I/O**   | **Description**                                                                        |
+========================================+=====================+===========+========================================================================================+
| character\*                            | label               | I         | Name of the value to be output                                                         |
+----------------------------------------+---------------------+-----------+----------------------------------------------------------------------------------------+
| integer, dimension(:,:), allocatable   | val                 | I         | Value to be output                                                                     |
|                                        |                     |           |                                                                                        |
|                                        |                     |           | In the case of a 3D grid, the type should be integer, dimension(:,:,:), allocatable.   |
+----------------------------------------+---------------------+-----------+----------------------------------------------------------------------------------------+
| integer                                | ier                 | O         | Error code. 0 means success.                                                           |
+----------------------------------------+---------------------+-----------+----------------------------------------------------------------------------------------+

cg\_iric\_write\_sol\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs double-precision real-type calculation results, having a
       value for each grid node.

[Format]

    call **cg\_iric\_write\_sol\_real\_f** (label, val, ier)

[Arguments]

+-------------------------------------------------+---------------------+-----------+----------------------------------------------------+
| **Type**                                        | **Variable name**   | **I/O**   | **Description**                                    |
+=================================================+=====================+===========+====================================================+
| character\*                                     | label               | I         | Name of the value to be output.                    |
+-------------------------------------------------+---------------------+-----------+----------------------------------------------------+
| double precision, dimension(:,:), allocatable   | val                 | I         | Value to be output                                 |
|                                                 |                     |           |                                                    |
|                                                 |                     |           | In the case of a 3D grid, the type should be       |
|                                                 |                     |           |                                                    |
|                                                 |                     |           | double precision, dimension(:,:,:), allocatable.   |
+-------------------------------------------------+---------------------+-----------+----------------------------------------------------+
| integer                                         | ier                 | O         | Error code. 0 means success.                       |
+-------------------------------------------------+---------------------+-----------+----------------------------------------------------+

cg\_iric\_write\_sol\_particle\_pos2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs particle positions (two-dimensions)

[Format]

    call **cg\_iric\_write\_sol\_particle\_pos2d\_f** (count, x, y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| integer                                       | count               | I         | The number of particles        |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | I         | y coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_write\_sol\_particle\_pos3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs particle positions (three-dimensions)

[Format]

    call **cg\_iric\_write\_sol\_particle\_pos3d\_f** (count, x, y, z,
    ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| integer                                       | count               | I         | The number of particles        |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | x                   | I         | x coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | I         | y coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | z                   | I         | z coordinate.                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

iric\_check\_cancel\_f
~~~~~~~~~~~~~~~~~~~~~~

-  Checks whether user canceled solver execution

[Format]

    call **iric\_check\_cancel\_f** (canceled)

[Arguments]

+------------+---------------------+-----------+--------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**          |
+============+=====================+===========+==========================+
| integer    | canceled            | O         | If canceled 1 returned   |
+------------+---------------------+-----------+--------------------------+

iric\_check\_lock\_f
~~~~~~~~~~~~~~~~~~~~

-  Checks whether the CGNS file is locked by GUI

[Format]

    call **iric\_check\_lock\_f** (filename, locked)

[Arguments]

+-----------------+---------------------+-----------+-------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**         |
+=================+=====================+===========+=========================+
| character(\*)   | filename            | I         | Filename                |
+-----------------+---------------------+-----------+-------------------------+
| integer         | locked              | O         | If locked 1 returned.   |
+-----------------+---------------------+-----------+-------------------------+

iric\_write\_sol\_start\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Inform the GUI that the solver started outputting result

[Format]

    call **iric\_write\_sol\_start\_f** (filename, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | filename            | I         | Filename                       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

iric\_write\_sol\_end\_f
~~~~~~~~~~~~~~~~~~~~~~~~

-  Inform the GUI that the solver finished outputting result

[Format]

    call **iric\_write\_sol\_end\_f** (filename, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | filename            | I         | Filename                       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

cg\_iric\_flush\_f
~~~~~~~~~~~~~~~~~~

-  Flush calculation result into CGNS file

[Format]

    call **cg\_iric\_flush\_f** (filename, fin, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| character(\*)   | filename            | I         | Filename                       |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | fid                 | I/O       | File ID                        |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_count\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the number of calculation result

[Format]

    call **cg\_iric\_read\_sol\_count\_f** (count, ier)

[Arguments]

+------------+---------------------+-----------+----------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                        |
+============+=====================+===========+========================================+
| integer    | count               | O         | The number of the calculation result   |
+------------+---------------------+-----------+----------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.           |
+------------+---------------------+-----------+----------------------------------------+

cg\_iric\_read\_sol\_time\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the time value

[Format]

    call **cg\_iric\_read\_sol\_time\_f** (step, time, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | step                | I         | Result Step Number             |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | time                | O         | Time                           |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_iteration\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the loop iteration value

[Format]

    call **cg\_iric\_read\_sol\_iteration\_f** (step, iteration, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | step                | I         | Result Step Number             |
+------------+---------------------+-----------+--------------------------------+
| integer    | iteration           | O         | Iteration value                |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_baseiterative\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the integer-type calculation result value

[Format]

    call **cg\_iric\_read\_sol\_baseiterative\_integer\_f** (step,
    label, val, ier)

[Arguments]

+-----------------+---------------------+-----------+--------------------------------+
| **Type**        | **Variable name**   | **I/O**   | **Description**                |
+=================+=====================+===========+================================+
| integer         | step                | I         | Result Step Number             |
+-----------------+---------------------+-----------+--------------------------------+
| character(\*)   | label               | I         | Name                           |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | val                 | O         | Value                          |
+-----------------+---------------------+-----------+--------------------------------+
| integer         | ier                 | O         | Error code. 0 means success.   |
+-----------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_baseiterative\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the double-precision real-type calculation result value

[Format]

    call **cg\_iric\_read\_sol\_baseiterative\_real\_f** (step, label,
    val, ier)

[Arguments]

+--------------------+---------------------+-----------+--------------------------------+
| **Type**           | **Variable name**   | **I/O**   | **Description**                |
+====================+=====================+===========+================================+
| integer            | step                | I         | Result Step Number             |
+--------------------+---------------------+-----------+--------------------------------+
| character(\*)      | label               | I         | Name                           |
+--------------------+---------------------+-----------+--------------------------------+
| double precision   | val                 | O         | Value                          |
+--------------------+---------------------+-----------+--------------------------------+
| integer            | ier                 | O         | Error code. 0 means success.   |
+--------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_gridcoord2d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the 2D structured grid (for moving grid calculation)

[Format]

    call **cg\_iric\_read\_sol\_gridcoord2d\_f** (step, x, y, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| integer                                       | step                | I         | Result Step Number             |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | x                   | O         | x coordinates                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | O         | y coordinates                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_gridcoord3d\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the 3D structured grid (for moving grid calculation)

[Format]

    call **cg\_iric\_read\_sol\_gridcoord3d\_f** (step, x, y, z, ier)

[Arguments]

+-----------------------------------------------+---------------------+-----------+--------------------------------+
| **Type**                                      | **Variable name**   | **I/O**   | **Description**                |
+===============================================+=====================+===========+================================+
| integer                                       | step                | I         | Result Step Number             |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | x                   | O         | Xcoordinates                   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | y                   | O         | Y coordinates                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| double precision, dimension(:), allocatable   | z                   | O         | Z coordinates                  |
+-----------------------------------------------+---------------------+-----------+--------------------------------+
| integer                                       | ier                 | O         | Error code. 0 means success.   |
+-----------------------------------------------+---------------------+-----------+--------------------------------+

cg\_iric\_read\_sol\_integer\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the integer-type calculation result, having a value for each
       grid node

[Format]

    call **cg\_iric\_read\_sol\_integer\_f** (step, label, val, ier)

[Arguments]

+--------------------------------------+---------------------+-----------+----------------------------------------------------------------------+
| **Type**                             | **Variable name**   | **I/O**   | **Description**                                                      |
+======================================+=====================+===========+======================================================================+
| integer                              | step                | I         | Result Step Number                                                   |
+--------------------------------------+---------------------+-----------+----------------------------------------------------------------------+
| character(\*)                        | label               | I         | Name                                                                 |
+--------------------------------------+---------------------+-----------+----------------------------------------------------------------------+
| integer, imension(:,:),allocatable   | val                 | O         | Value (In case of 3D grid, integer, dimension(:,:,:), allocatable)   |
+--------------------------------------+---------------------+-----------+----------------------------------------------------------------------+
| integer                              | ier                 | O         | Error code. 0 means success.                                         |
+--------------------------------------+---------------------+-----------+----------------------------------------------------------------------+

cg\_iric\_read\_sol\_real\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Reads the double-precision real-type calculation result, having a
       value for each grid node

[Format]

    call **cg\_iric\_read\_sol\_real\_f** (step, label, val, ier)

[Arguments]

+-------------------------------------------------+---------------------+-----------+-------------------------------------------------------------------------------+
| **Type**                                        | **Variable name**   | **I/O**   | **Description**                                                               |
+=================================================+=====================+===========+===============================================================================+
| integer                                         | step                | I         | Result Step Number                                                            |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------------------------------------------+
| character(\*)                                   | label               | I         | Name                                                                          |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------------------------------------------+
| double precision, dimension(:,:), allocatable   | val                 | O         | Value (In case of 3D grid, double precision, dimension(:,:,:), allocatable)   |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------------------------------------------+
| integer                                         | ier                 | O         | Error code. 0 means success.                                                  |
+-------------------------------------------------+---------------------+-----------+-------------------------------------------------------------------------------+

cg\_iric\_write\_errorcode\_f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Outputs error code

[Format]

    call **cg\_iric\_write\_errorcode\_f** (code, ier)

[Arguments]

+------------+---------------------+-----------+------------------------------------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                                            |
+============+=====================+===========+============================================================+
| integer    | code                | I         | The error code that the grid generating program returns.   |
+------------+---------------------+-----------+------------------------------------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.                               |
+------------+---------------------+-----------+------------------------------------------------------------+

cg\_close\_f
~~~~~~~~~~~~

-  Closing the CGNS file

[Format]

    call **cg\_close\_f**\ (fid, ier)

[Arguments]

+------------+---------------------+-----------+--------------------------------+
| **Type**   | **Variable name**   | **I/O**   | **Description**                |
+============+=====================+===========+================================+
| integer    | fid                 | I         | File ID                        |
+------------+---------------------+-----------+--------------------------------+
| integer    | ier                 | O         | Error code. 0 means success.   |
+------------+---------------------+-----------+--------------------------------+

